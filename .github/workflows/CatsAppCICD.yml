name: CatsApp CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Run sample script
        run: echo Hello, CatsApp

  lint:
    name: Perform lint check
    needs: [start]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    name: Perform Unit Testing
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions.upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/test/testDebugUnitTest/

  debug-apk:
    name: Generate Debug APK
    needs: [unit-test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build and test
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug
          ./gradlew test

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk